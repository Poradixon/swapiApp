{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/swapi.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nfunction GameComponent_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 7)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Left Player\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r0.leftCard.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mass: \", ctx_r0.leftCard.mass, \" kg\");\n  }\n}\nfunction GameComponent_mat_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 8)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Right Player\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r1.rightCard.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mass: \", ctx_r1.rightCard.mass, \" kg\");\n  }\n}\nfunction GameComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Winner: \", ctx_r2.winner, \"\");\n  }\n}\nexport class GameComponent {\n  constructor(swapiService) {\n    this.swapiService = swapiService;\n    this.winner = '';\n  }\n  startGame() {\n    this.winner = ''; // restart\n    this.fetchRandomCards();\n  }\n  fetchRandomCards() {\n    this.swapiService.getRandomPerson().subscribe(person1 => {\n      this.leftCard = person1.result.properties;\n      this.swapiService.getRandomPerson().subscribe(person2 => {\n        this.rightCard = person2.result.properties;\n        this.determineWinner();\n      });\n    });\n  }\n  determineWinner() {\n    const mass1 = parseInt(this.leftCard.mass);\n    const mass2 = parseInt(this.rightCard.mass);\n    if (mass1 > mass2) {\n      this.winner = 'Left';\n    } else if (mass1 < mass2) {\n      this.winner = 'Right';\n    } else {\n      this.winner = 'Draw';\n    }\n  }\n  static #_ = this.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.SwapiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"game-container\"], [1, \"title\"], [1, \"cards\"], [\"class\", \"card\", \"color\", \"primary\", 4, \"ngIf\"], [\"class\", \"card\", \"color\", \"accent\", 4, \"ngIf\"], [\"class\", \"winner-announcement\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"play-again-button\", 3, \"click\"], [\"color\", \"primary\", 1, \"card\"], [\"color\", \"accent\", 1, \"card\"], [1, \"winner-announcement\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Star Wars Battle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, GameComponent_mat_card_4_Template, 9, 2, \"mat-card\", 3);\n        i0.ɵɵtemplate(5, GameComponent_mat_card_5_Template, 9, 2, \"mat-card\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, GameComponent_div_6_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function GameComponent_Template_button_click_7_listener() {\n          return ctx.startGame();\n        });\n        i0.ɵɵtext(8, \"Play Again\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.leftCard);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.rightCard);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.winner);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle, i4.MatButton],\n    styles: [\".game-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 30px;\\n}\\n.game-container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  font-size: 2.5rem;\\n  color: #3f51b5;\\n  margin-bottom: 20px;\\n}\\n.game-container[_ngcontent-%COMP%]   .cards[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n.game-container[_ngcontent-%COMP%]   .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  width: 300px;\\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\\n}\\n.game-container[_ngcontent-%COMP%]   .cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\n}\\n.game-container[_ngcontent-%COMP%]   .winner-announcement[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  color: #ff4081;\\n  margin: 20px 0;\\n}\\n.game-container[_ngcontent-%COMP%]   .play-again-button[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtBQUhGO0FBS0U7RUFDRSxpQkFBQTtFQUNBLGNBVFk7RUFVWixtQkFBQTtBQUhKO0FBTUU7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUFKSjtBQU1JO0VBQ0UsWUFBQTtFQUNBLHFEQUFBO0FBSk47QUFNTTtFQUNFLDJCQUFBO0VBQ0EseUNBQUE7QUFKUjtBQVNFO0VBQ0UsaUJBQUE7RUFDQSxjQS9CVztFQWdDWCxjQUFBO0FBUEo7QUFVRTtFQUNFLGdCQUFBO0FBUkoiLCJzb3VyY2VzQ29udGVudCI6WyJcbiRwcmltYXJ5LWNvbG9yOiAjM2Y1MWI1OyBcbiRhY2NlbnQtY29sb3I6ICNmZjQwODE7ICBcblxuLmdhbWUtY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuXG4gIC50aXRsZSB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cblxuICAuY2FyZHMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5cbiAgICAuY2FyZCB7XG4gICAgICB3aWR0aDogMzAwcHg7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCBib3gtc2hhZG93IDAuM3MgZWFzZTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcbiAgICAgICAgYm94LXNoYWRvdzogMCA4cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLndpbm5lci1hbm5vdW5jZW1lbnQge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xuICAgIG1hcmdpbjogMjBweCAwO1xuICB9XG5cbiAgLnBsYXktYWdhaW4tYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAKMA,mCAAwD;IAEpCA,2BAAW;IAAAA,iBAAiB;IAE9CA,wCAAkB;IACbA,YAAyB;IAAAA,iBAAI;IAChCA,yBAAG;IAAAA,YAA4B;IAAAA,iBAAI;;;;IADhCA,eAAyB;IAAzBA,yDAAyB;IACzBA,eAA4B;IAA5BA,4DAA4B;;;;;IAInCA,mCAAwD;IAEpCA,4BAAY;IAAAA,iBAAiB;IAE/CA,wCAAkB;IACbA,YAA0B;IAAAA,iBAAI;IACjCA,yBAAG;IAAAA,YAA6B;IAAAA,iBAAI;;;;IADjCA,eAA0B;IAA1BA,0DAA0B;IAC1BA,eAA6B;IAA7BA,6DAA6B;;;;;IAKvCA,8BAAgD;IACzCA,YAAoB;IAAAA,iBAAK;;;;IAAzBA,eAAoB;IAApBA,oDAAoB;;;ACnB9B,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFzB,WAAM,GAAW,EAAE;EAEuB;EAEjDC,SAAS;IACP,IAAI,CAACC,MAAM,GAAG,EAAE,CAAC,CAAC;IAClB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd,IAAI,CAACH,YAAY,CAACI,eAAe,EAAE,CAACC,SAAS,CAAEC,OAAO,IAAI;MACxD,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,MAAM,CAACC,UAAU;MAEzC,IAAI,CAACT,YAAY,CAACI,eAAe,EAAE,CAACC,SAAS,CAAEK,OAAO,IAAI;QACxD,IAAI,CAACC,SAAS,GAAGD,OAAO,CAACF,MAAM,CAACC,UAAU;QAE1C,IAAI,CAACG,eAAe,EAAE;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAA,eAAe;IACb,MAAMC,KAAK,GAAGC,QAAQ,CAAC,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAAC;IAC1C,MAAMC,KAAK,GAAGF,QAAQ,CAAC,IAAI,CAACH,SAAS,CAACI,IAAI,CAAC;IAE3C,IAAIF,KAAK,GAAGG,KAAK,EAAE;MACjB,IAAI,CAACd,MAAM,GAAG,MAAM;KACrB,MAAM,IAAIW,KAAK,GAAGG,KAAK,EAAE;MACxB,IAAI,CAACd,MAAM,GAAG,OAAO;KACtB,MAAM;MACL,IAAI,CAACA,MAAM,GAAG,MAAM;;EAExB;EAAC;qBAnCUJ,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDP1BxB,8BAA4B;QACNA,gCAAgB;QAAAA,iBAAK;QAEvCA,8BAAmB;QACjBA,wEAQW;QAEXA,wEAQW;QACbA,iBAAM;QAEPA,8DAEO;QAENA,iCAA0F;QAAtBA;UAAA,OAASyB,eAAW;QAAA,EAAC;QAACzB,0BAAU;QAAAA,iBAAS;;;QAzBnFA,eAAc;QAAdA,mCAAc;QAUdA,eAAe;QAAfA,oCAAe;QAWpCA,eAAY;QAAZA,iCAAY","names":["i0","GameComponent","constructor","swapiService","startGame","winner","fetchRandomCards","getRandomPerson","subscribe","person1","leftCard","result","properties","person2","rightCard","determineWinner","mass1","parseInt","mass","mass2","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/poradixon/swapiApp-1/src/app/game/game.component.html","/Users/poradixon/swapiApp-1/src/app/game/game.component.ts"],"sourcesContent":["<!-- src/app/game/game.component.html -->\n<div class=\"game-container\">\n    <h1 class=\"title\">Star Wars Battle</h1>\n    \n    <div class=\"cards\">\n      <mat-card class=\"card\" *ngIf=\"leftCard\" color=\"primary\">\n        <mat-card-header>\n          <mat-card-title>Left Player</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <p>Name: {{ leftCard.name }}</p>\n          <p>Mass: {{ leftCard.mass }} kg</p>\n        </mat-card-content>\n      </mat-card>\n  \n      <mat-card class=\"card\" *ngIf=\"rightCard\" color=\"accent\">\n        <mat-card-header>\n          <mat-card-title>Right Player</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <p>Name: {{ rightCard.name }}</p>\n          <p>Mass: {{ rightCard.mass }} kg</p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  \n   <div *ngIf=\"winner\" class=\"winner-announcement\">\n      <h3>Winner: {{ winner }}</h3>\n    </div>\n  \n    <button mat-raised-button color=\"primary\" class=\"play-again-button\" (click)=\"startGame()\">Play Again</button>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { SwapiService } from '../services/swapi.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n})\nexport class GameComponent {\n  public leftCard: any;\n  public rightCard: any;\n  public winner: string = '';\n\n  constructor(private swapiService: SwapiService) {}\n\n  startGame() {\n    this.winner = ''; // restart\n    this.fetchRandomCards();\n  }\n\n  fetchRandomCards() {\n    this.swapiService.getRandomPerson().subscribe((person1) => {\n      this.leftCard = person1.result.properties;\n\n      this.swapiService.getRandomPerson().subscribe((person2) => {\n        this.rightCard = person2.result.properties;\n\n        this.determineWinner();\n      });\n    });\n  }\n\n  determineWinner() {\n    const mass1 = parseInt(this.leftCard.mass);\n    const mass2 = parseInt(this.rightCard.mass);\n\n    if (mass1 > mass2) {\n      this.winner = 'Left';\n    } else if (mass1 < mass2) {\n      this.winner = 'Right';\n    } else {\n      this.winner = 'Draw';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}