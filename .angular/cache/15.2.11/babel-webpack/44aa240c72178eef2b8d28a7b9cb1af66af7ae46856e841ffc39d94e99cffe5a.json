{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SwapiService {\n  //   private readonly PEOPLE_COUNT = 82; // Liczba osób\n  //   private readonly STARSHIPS_COUNT = 37; // Liczba statków kosmicznych\n  //     const maxId =\n  //       resource === 'people' ? this.PEOPLE_COUNT : this.STARSHIPS_COUNT;\n  //     const randomId = Math.floor(Math.random() * maxId) + 1; // Losowanie ID w odpowiednim zakresie\n  //     const url = `${this.BASE_URL}/${resource}/${randomId}`;\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://www.swapi.tech/api';\n  }\n  getRandomPerson() {\n    const randomId = Math.floor(Math.random() * 83) + 1;\n    return this.http.get(`${this.apiUrl}/people/${randomId}`);\n  }\n  getRandomStarship() {\n    const randomId = Math.floor(Math.random() * 36) + 1;\n    return this.http.get(`${this.apiUrl}/starships/${randomId}`);\n  }\n  static #_ = this.ɵfac = function SwapiService_Factory(t) {\n    return new (t || SwapiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SwapiService,\n    factory: SwapiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvB;EACA;EAEA;EACA;EACA;EACA;EAEAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAThB,WAAM,GAAG,4BAA4B;EASN;EAEvCC,eAAe;IACb,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IACnD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,WAAWL,QAAQ,EAAE,CAAC;EAC3D;EAEAM,iBAAiB;IACf,MAAMN,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IACnD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,cAAcL,QAAQ,EAAE,CAAC;EAC9D;EAAC;qBApBUJ,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAW,SAAZX,YAAY;IAAAY,YAFX;EAAM","names":["SwapiService","constructor","http","getRandomPerson","randomId","Math","floor","random","get","apiUrl","getRandomStarship","factory","providedIn"],"sourceRoot":"","sources":["/Users/poradixon/swapiApp-1/src/app/services/swapi.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwapiService {\n  private apiUrl = 'https://www.swapi.tech/api';\n  //   private readonly PEOPLE_COUNT = 82; // Liczba osób\n  //   private readonly STARSHIPS_COUNT = 37; // Liczba statków kosmicznych\n\n  //     const maxId =\n  //       resource === 'people' ? this.PEOPLE_COUNT : this.STARSHIPS_COUNT;\n  //     const randomId = Math.floor(Math.random() * maxId) + 1; // Losowanie ID w odpowiednim zakresie\n  //     const url = `${this.BASE_URL}/${resource}/${randomId}`;\n\n  constructor(private http: HttpClient) {}\n\n  getRandomPerson(): Observable<any> {\n    const randomId = Math.floor(Math.random() * 83) + 1;\n    return this.http.get(`${this.apiUrl}/people/${randomId}`);\n  }\n\n  getRandomStarship(): Observable<any> {\n    const randomId = Math.floor(Math.random() * 36) + 1;\n    return this.http.get(`${this.apiUrl}/starships/${randomId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}